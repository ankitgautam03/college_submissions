#include<iostream>
#include<queue>
#include<string>
using namespace std;
int adj[50][50];
int visited[50]={0};
void dfs(int s, int n, string arr[])
{
    visited[s]=1;
    cout<<" "<<arr[s]<<" ";
    for (int i=0 ; i<n; i++)
    {
        if (adj[s][i] && !visited[i])
        {
            dfs(i,n,arr);
        }
    }
}
void bfs(int s, int n , string arr[])
{
    bool visited[n];
    for (int i=0; i<n; i++)
    {
        visited[i]=false; int v;
        queue<int> bfsq;
        if(!visited[s])
        {
            cout<<arr[s]<<" ";
            bfsq.push(s);
            visited[s]=true;
            while(!bfsq.empty())
            {
                v=bfsq.front();
                for (int i=0; i<n; i++)
                {
                    if (adj[v][i] && !visited[i])
                    {
                        cout<<arr[i]<<" ";
                        visited[i]=true; 
                        bfsq.push(i);
                    }
                }
                bfsq.pop();
            }
        }
    }
}
int main()
{

    int n,start,c;
    cout<<"Enter the number of cities ";cin>>n;
    string cities[n];
    for (int i=0; i<n; i++)
    {
        cout<<"\nEnter the names of the cit "<<i<<" ";cin>>cities[i];
    }
    cout<<"\nThe cities are "<<endl;
    for (int i=0; i<n; i++)
    {
       cout<<cities[i]<<endl;
    }
   
    for (int i=0; i<n;i++)
    {
        for (int j=i+1; j<n; j++)
        {
            cout<<"Enter the distance between "<<cities[i]<<" and "<<cities[j]<<" "; 
            cin>>c;
            adj[i][j]=adj[j][i]=c;
        }
    }
    cout<<endl;
    for (int i=0 ; i<n; i++)
    {
        cout<<"\t"<<cities[i];   
    }
    cout<<endl;
    for (int i=0; i<n; i++)
    {
        cout<<cities[i]<<"\t";
        for (int j=0; j<n; j++)
        {
            cout<<adj[i][j]<<"\t";
        }
        cout<<endl;
    }
    
    cout<<"Enter the starting vertex for bfs and dfs ";
    cin>>start;
    cout<<"\nDFS"; dfs(start,n,cities); cout<<endl;
    cout<<"BFS ";bfs(start,n,cities);
}
